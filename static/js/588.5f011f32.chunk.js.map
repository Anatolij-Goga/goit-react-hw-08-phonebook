{"version":3,"file":"static/js/588.5f011f32.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.js","pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"AuthForm_img__mkz3g\",\"inputThumb\":\"AuthForm_inputThumb__qy5t9\",\"input\":\"AuthForm_input__dB7h2\",\"inputText\":\"AuthForm_inputText__fXcW+\",\"buttonActive\":\"AuthForm_buttonActive__EeW2X\",\"helpfulText\":\"AuthForm_helpfulText__NaqtV\"};","import { Formik, Form, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box, Typography } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Button from '@mui/material/Button';\nimport { register, login } from 'redux/authentication/authOperations';\nimport style from './AuthForm.module.css';\n\nconst validateName = value => {\n  let error;\n  if (!value) {\n    error = 'Required';\n  } else if (/^[A-Za-z]+$/.test(value)) {\n    error = 'Invalid name';\n  }\n  return error;\n};\n\nconst validateEmail = value => {\n  let error;\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n};\n\nconst validatePassword = value => {\n  let error;\n  if (!value) {\n    error = 'Required';\n  }\n  if (value.length < 7) {\n    error = 'Password to short';\n  }\n  return error;\n};\n\nexport const AuthForm = ({ title }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({\n    showPassword: false,\n  });\n\n  const handleClickShowPassword = () => {\n    setValue({\n      ...value,\n      showPassword: !value.showPassword,\n    });\n  };\n\n  const handleSubmit = (name, email, password) => {\n    title === 'Register'\n      ? dispatch(register({ name, email, password }))\n      : dispatch(login({ email, password }));\n  };\n\n  return (\n    <div className={style.img}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Typography\n          style={{\n            fontSize: '35px',\n            fontWeight: 'bold',\n            lineHeight: '2.8',\n            marginBottom: '40px',\n          }}\n          variant=\"h2\"\n        >\n          {title}\n        </Typography>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            name: '',\n            showPassword: false,\n          }}\n          onSubmit={(values, { resetForm }) => {\n            handleSubmit(values.name, values.email, values.password);\n            resetForm();\n          }}\n        >\n          {({ errors, touched, values }) => {\n            const password = values.password.length >= 7;\n\n            return (\n              <Form>\n                {title === 'Register' ? (\n                  <Box className={style.inputThumb}>\n                    <Typography variant=\"caption\" className={style.inputText}>\n                      Name\n                    </Typography>\n                    <Field\n                      className={style.input}\n                      name=\"name\"\n                      type=\"text\"\n                      validate={validateName}\n                    />\n                    {errors.name && touched.name && (\n                      <Typography\n                        variant=\"subtitle1\"\n                        className={style.helpfulText}\n                      >\n                        {errors.name}\n                      </Typography>\n                    )}\n                  </Box>\n                ) : null}\n                <Box className={style.inputThumb}>\n                  <Typography variant=\"caption\" className={style.inputText}>\n                    Email\n                  </Typography>\n                  <Field\n                    className={style.input}\n                    name=\"email\"\n                    type=\"email\"\n                    validate={validateEmail}\n                  />\n                  {errors.email && touched.email && (\n                    <Typography\n                      variant=\"subtitle1\"\n                      className={style.helpfulText}\n                    >\n                      {errors.email}\n                    </Typography>\n                  )}\n                </Box>\n                <Box className={style.inputThumb}>\n                  <Typography variant=\"caption\" className={style.inputText}>\n                    Password\n                  </Typography>\n                  <Field\n                    className={style.input}\n                    type={value.showPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    validate={validatePassword}\n                  />\n                  <IconButton\n                    style={{\n                      width: '24px',\n                      height: '24px',\n                      position: 'absolute',\n                      top: '17px',\n                      right: '7px',\n                    }}\n                    size=\"small\"\n                    type=\"button\"\n                    onClick={handleClickShowPassword}\n                  >\n                    {value.showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                  {errors.password && touched.password && (\n                    <Typography\n                      variant=\"subtitle1\"\n                      className={style.helpfulText}\n                    >\n                      {errors.password}\n                    </Typography>\n                  )}\n                </Box>\n\n                <Button\n                  fullWidth={true}\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={!!errors.email || !password}\n                >\n                  {title === 'Register' ? 'Register' : 'Login'}\n                </Button>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Box>\n    </div>\n  );\n};\n\nAuthForm.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { AuthForm } from '../components/AuthForm/AuthForm';\n\nconst LoginPage = () => {\n  return <AuthForm title={'Login'} />;\n};\n\nexport default LoginPage;\n"],"names":["validateName","value","error","test","validateEmail","validatePassword","length","AuthForm","_ref","title","dispatch","useDispatch","_useState","useState","showPassword","_useState2","_slicedToArray","setValue","handleClickShowPassword","_objectSpread","_jsx","className","style","children","_jsxs","Box","display","flexDirection","justifyContent","alignItems","Typography","fontSize","fontWeight","lineHeight","marginBottom","variant","Formik","initialValues","email","password","name","onSubmit","values","_ref2","resetForm","register","login","_ref3","errors","touched","Form","Field","type","validate","IconButton","width","height","position","top","right","size","onClick","VisibilityOff","Visibility","Button","fullWidth","color","disabled"],"sourceRoot":""}